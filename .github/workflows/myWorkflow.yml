name: Deploy to Virtual Server

on:
  push:
    branches:
      - main  # Run the workflow when a push is made to the 'main' branch

jobs:
  build:
    name: Build Discord Bot Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image for Discord bot
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USER_NAME}}
        key: ${{secrets.DISCORD_SECRET}}
        port: 22
        passphrase: ${{secrets.SSH_PASSPHRASE}} 
        script: |
          cd /root/Discord_BOT
          git pull
          docker build -t my-discord-bot:latest .

  deploy:
    name: Deploy Discord Bot
    runs-on: ubuntu-latest
    needs: build  # This ensures that this job runs after 'build'
    steps:
    - name: Deploy Docker container for Discord bot
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USER_NAME}}
        key: ${{secrets.DISCORD_SECRET}}
        port: 22
        passphrase: ${{secrets.SSH_PASSPHRASE}} 
        script: |
          echo "Stopping and removing existing Discord bot container (if it exists)..."
          docker stop discord-bot || true
          docker rm discord-bot || true
          
          echo "Removing old Docker image for Discord bot..."
          docker rmi my-discord-bot:latest || true
          
          echo "Running new Discord bot container..."
          docker run -d --name discord-bot my-discord-bot:latest

  logs:
    name: Check Logs and Clean Up
    runs-on: ubuntu-latest
    needs: deploy  # This ensures that this job runs after 'deploy'
    steps:
    - name: Check Docker container logs
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USER_NAME}}
        key: ${{secrets.DISCORD_SECRET}}
        port: 22
        passphrase: ${{secrets.SSH_PASSPHRASE}} 
        script: |
          echo "Checking if the Docker container is running..."
          docker ps | grep discord-bot
          echo "Fetching logs from the Discord bot container..."
          docker logs discord-bot
          
    - name: Clean up unused Docker resources
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USER_NAME}}
        key: ${{secrets.DISCORD_SECRET}}
        port: 22
        passphrase: ${{secrets.SSH_PASSPHRASE}} 
        script: |
          echo "Cleaning up unused Docker resources..."
          docker system prune -f
